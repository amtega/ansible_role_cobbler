---
# Configure distros tasks

- block:

  - name: read actual distros config in cobbler server
    include_tasks: read_distros.yml

  # - name: delete distros not managed by ansible
  #   command: "cobbler distro remove --name={{ item }} --recursive"
  #   when:
  #     - cobbler_delete_unmanaged
  #     - item not in cobbler_distros_present_names
  #   with_items: "{{ cobbler_distros }}"

  # - name: delete distros with different iso checksum
  #   command: "cobbler distro remove --name={{ item.name }} --recursive"
  #   when: >
  #     item.ks_meta.iso_checksum
  #       not in cobbler_distros_config
  #         | selectattr('name', 'equalto', item.name)
  #         | map(attribute='iso_checksum')
  #         | list
  #   with_items: "{{ cobbler_distros_config }}"
  #
  - name: search ISO files
    find:
      paths: "{{ cobbler_iso_dir }}"
      file_type: file
    register: cobbler_search_iso_files_result

  - name: delete ISOs not managed by ansible
    file:
      path: "{{ item }}"
      state: absent
    when: >
      cobbler_delete_unmanaged
      and item | basename
        not in cobbler_distros
          | selectattr('state', 'equalto', 'present')
          | map(attribute='iso_file')
          | list
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}

  - name: find stalled mounted ISOs dirs
    command: >-
      find {{ cobbler_iso_dir }}/mounted -mindepth 1 -maxdepth 1 -type d
    register: cobbler_find_stalled_iso_tmp_dirs_result
    changed_when: false

  - name: umount stalled ISOs out of temporary dirs
    mount:
      name: "{{ item }}"
      src: /dev/null
      fstype: loop
      state: unmounted
    with_items: "{{ cobbler_find_stalled_iso_tmp_dirs_result.stdout_lines }}"

  - name: download ISOs
    get_url:
      url: "{{ item.iso_url }}/{{ item.iso_file }}"
      dest: "{{ cobbler_iso_dir }}/{{ item.iso_file }}"
      checksum: "{{ item.iso_checksum_algorithm }}:{{ item.iso_checksum }}"
      force: yes
      timeout: 60
    when: >
      item.state == "present"
      and item.name not in cobbler_distros_present_names
      or item.iso_checksum not in cobbler_distros_config
                                  | selectattr('name', 'equalto', item.name)
                                  | map(attribute='ks_meta')
                                  | map(attribute='iso_checksum') | list
    register: cobbler_download_distros_result
    with_items: "{{ cobbler_distros }}"
    loop_control:
      label: "{{ item.iso_url + '/' + item.iso_file }}"

  - name: search downloaded ISO files
    find:
      paths: "{{ cobbler_iso_dir }}"
      file_type: file
    register: cobbler_search_iso_files_result

  - name: create temporary mount dirs for ISOs
    file:
      path: "{{ cobbler_iso_mount_dir }}/{{ item | basename }}"
      state: directory
      owner: root
      group: root
      mode: 0755
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}

  - name: mount ISO in temporary dir
    mount:
      fstype: iso9660
      opts: "loop,ro"
      src: "{{ item }}"
      path: "{{ cobbler_iso_mount_dir }}/{{ item | basename }}"
      state: mounted
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}

  - name: import distros
    command: >-
      cobbler import
      --name={{ cobbler_distros
                  | selectattr('iso_file', 'equalto', item | basename)
                  | map(attribute='name')
                  | list
                  | first }}
      --path={{ cobbler_iso_mount_dir }}/{{ item | basename }}
    when: >
      cobbler_distros
      | selectattr('iso_file', 'equalto', item | basename)
      | map(attribute='name')
      | list
      | first
      not in cobbler_distros_present_names
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}

  # - name: add ksmeta attributes to im- name: search last used loopback device number
    # shell: >-
    #   losetup -a
    #   | cut -f1 -d':'
    #   | tail -1
    #   | sed -r 's#.*([0-9]+)#\1#g'
    # register: cobbler_losetup_result
    # failed_when: cobbler_losetup_result.rc != 0
    # changed_when: false


  #   command: >-
  #     cobbler distro edit
  #     --name={{ cobbler_distros_config
  #                 | selectattr('iso_file', 'equalto', item | basename)
  #                 | map(attribute='name')
  #                 | list
  #                 | first }}
  #     --ksmeta='iso_file={{ cobbler_distros_config
  #                             | selectattr('iso_file', 'equalto', item
  #                             | basename)
  #                             | map(attribute='iso_file')
  #                             | list
  #                             | first }},
  #               iso_checksum={{ cobbler_distros
  #                             | selectattr('iso_file', 'equalto', item
  #                             | basename)
  #                             | map(attribute='iso_checksum')
  #                             | list
  #                             | first }}'
  #   when:
  #     cobbler_distros_config
  #     | selectattr('iso_file', 'equalto', item | basename)
  #     | map(attribute='name')
  #     | list
  #     | first
  #     not in cobbler_distros
  #   with_items: >-
  #     {{ cobbler_search_iso_files_result.files
  #         | map(attribute="path")
  #         | list }}
  #
  #
  # - name: delete default profiles created during distro import
  #   command: >-
  #     cobbler profile remove
  #     --name={{ cobbler_distros_config
  #                 | selectattr('iso_file', 'equalto', item | basename)
  #                 | map(attribute='name')
  #                 | list
  #                 | first }}
  #     --recursive
  #   when: >
  #     cobbler_distros
  #       | selectattr('iso_file', 'equalto', item | basename)
  #       | map(attribute='name')
  #       | list
  #       | first
  #       not in cobbler_distros
  #   with_items: >-
  #     {{ cobbler_search_iso_files_result.files
  #         | map(attribute="path")
  #         | list }}
  #
  # - name: umount ISOs out of temporary dirs
  #   mount:
  #     fstype: iso9660
  #     opts: "loop,ro"
  #     src: "{{ item }}"
  #     name: "{{ cobbler_iso_mount_dir }}/{{ item | basename }}"
  #     state: unmounted
  #   with_items: >-
  #     {{ cobbler_search_iso_files_result.files
  #         | map(attribute="path")
  #         | list }}
  #
  # - name: get list of ISOs temporary dirs
  #   command: >-
  #     find "{{ cobbler_iso_dir }}/mounted" -maxdepth 1 -mindepth 1 -type d
  #   register: cobbler_find_iso_tmpdirs_result
  #   changed_when: false
  #
  # - name: remove ISOs temporary dirs
  #   file:
  #     path: "{{ item }}"
  #     state: absent
  #   with_items: "{{ cobbler_find_iso_tmpdirs_result.stdout_lines }}"
  #
  # - name: get list of downloade ISOs
  #   command: >-
  #     find "{{ cobbler_iso_dir }}" -maxdepth 1 -mindepth 1 -type f
  #   register: cobbler_find_iso_files_result
  #   changed_when: false
  #
  # - name: delete downloaded ISOs
  #   file:
  #     path: "{{ item }}"
  #     state: absent
  #   with_items: >-
  #     {{ cobbler_search_iso_files_result.files
  #         | map(attribute="path")
  #         | list }}

  tags:
    - role::cobbler
    - role::cobbler::configure
    - role::cobbler::configure::distros
