---
# Configuration tasks

#
# Cobbler configuration tasks
#

- block:

  - name: configure clobber settings
    include: configure_settings.yml
    static: false
    tags:
      - role::dhcpd
      - role::dhcpd::configure
      - role::dhcpd::configure::settings



  #
  # Read cobbler current distros / profiles config
  #

  - name: read actual distro config
    command: cat "{{ item }}"
    with_fileglob: "{{ cobbler_config_dir }}/distros.d/*"
    register: cat_actual_distros_config_result
    changed_when: false

  - name: get list of profiles
    command: cobbler profile list | awk '{ print $1 }'
    register: cobbler_profile_list_result
    changed_when: "false"

  - name: set fact cobbler_actual_distros_config_json
    set_fact:
      cobbler_actual_distros_config_json: "
        [ {% for item in cat_actual_distros_config_result.results | default([]) %}
          {{ item.stdout }}
          {% if not loop.last %},{% endif %}
        {% endfor %} ]"
    changed_when: false

  - name: set fact cobbler_actual_distros_config
    set_fact:
      cobbler_actual_distros_config: "{{ cobbler_actual_distros_config_json | from_json }}"
    changed_when: false

  - name: set fact cobbler_actual_distros
    set_fact:
      cobbler_actual_distros="{{ cobbler_actual_distros_config | map(attribute='name') | list }}"
    changed_when: false

  #
  # Manage distros, profiles and ISOs.
  #

  - name: delete distros not managed by ansible
    command: cobbler distro remove --name={{ item }} --recursive
    when: "'{{ item }}' not in cobbler_distros | map(attribute='name') | list"
    with_items: "{{ cobbler_actual_distros }}"

  - name: delete profiles not managed by ansible
    command: cobbler profile remove --name={{ item }} --recursive
    when: "'{{ item }}' not in cobbler_profiles | map(attribute='name') | list"
    with_items: "{{ cobbler_profile_list_result.stdout_lines }}"

  - name: delete ISOs not managed by ansible
    file: path="{{ item }}" state=absent
    when: "'{{ item | basename }}' not in cobbler_distros | map(attribute='iso_file') | list"
    with_fileglob: "{{ cobbler_iso_dir }}/*"

  - name: delete distros with different iso md5sum
    command: cobbler distro remove --name={{ item.name }} --recursive
    when: "'{{ item.ks_meta.iso_md5sum }}' not in cobbler_distros | selectattr('name', 'equalto', item.name) | map(attribute='iso_md5sum') | list"
    with_items: "{{ cobbler_actual_distros_config }}"

  - name: find stalled ISOs temporary dirs
    command: find {{ cobbler_iso_dir }}/mounted -mindepth 1 -maxdepth 1 -type d
    register: find_stalled_iso_tmp_dirs_result
    changed_when: false

  - name: umount stalled ISOs out of temporary dirs
    mount: name="{{ item }}" src=/dev/null fstype=loop state=unmounted
    with_items: "{{ find_stalled_iso_tmp_dirs_result.stdout_lines }}"

  #
  # Download distros ISOs and configure them
  #

  - name: download distros ISOs
    get_url: url={{ item.iso_url }}/{{ item.iso_file }} dest={{ cobbler_iso_dir }}/{{ item.iso_file }} checksum="md5:{{ item.iso_md5sum }}" force=yes timeout=60
    environment:
      http_proxy: "{{ cobbler_proxy_url_ext }}"
      https_proxy: "{{ cobbler_proxy_url_ext }}"
    when: "'{{ item.name }}' not in cobbler_actual_distros
                             or '{{ item.iso_md5sum }}' not in cobbler_actual_distros_config | selectattr('name', 'equalto', item.name)
                                                                                             | map(attribute='ks_meta')
                                                                                             | map(attribute='iso_md5sum') | list"
    with_items: "{{ cobbler_distros }}"
    register: download_distros_result

  - name: create temporary mount dirs for ISOs
    file: path={{ cobbler_iso_dir }}/mounted/{{ item | basename }} state=directory owner=root group=root mode=0755
    with_fileglob: "{{ cobbler_iso_dir }}/*"

  - name: mount ISOs in temporary dirs
    mount: fstype=iso9660 opts="loop,ro" src={{ item }} name={{ cobbler_iso_dir }}/mounted/{{ item | basename }} state=mounted
    with_fileglob: "{{ cobbler_iso_dir }}/*"

  - name: import distros
    command: "cobbler import --name={{ cobbler_distros | selectattr('iso_file', 'equalto', item | basename) | map(attribute='name') | list | first }}
                             --path={{ cobbler_iso_dir }}/mounted/{{ item | basename }}"
    with_fileglob: "{{ cobbler_iso_dir }}/*"
    when: "'{{ cobbler_distros | selectattr('iso_file', 'equalto', item | basename) | map(attribute='name') | list | first }}' not in cobbler_actual_distros"

  - name: add ksmeta attributes to imported distros
    command: "cobbler distro edit --name={{ cobbler_distros | selectattr('iso_file', 'equalto', item | basename) | map(attribute='name') | list | first }}
                                  --ksmeta='iso_file={{ cobbler_distros | selectattr('iso_file', 'equalto', item | basename) | map(attribute='iso_file') | list | first }},
                                            iso_md5sum={{ cobbler_distros | selectattr('iso_file', 'equalto', item | basename) | map(attribute='iso_md5sum') | list | first }}'"
    with_fileglob: "{{ cobbler_iso_dir }}/*"
    when: "'{{ cobbler_distros | selectattr('iso_file', 'equalto', item | basename) | map(attribute='name') | list | first }}' not in cobbler_actual_distros"

  - name: delete default profiles created during distro import
    command: cobbler profile remove --name={{ cobbler_distros | selectattr('iso_file', 'equalto', item | basename) | map(attribute='name') | list | first }} --recursive
    when: "'{{ cobbler_distros | selectattr('iso_file', 'equalto', item | basename) | map(attribute='name') | list | first }}' not in cobbler_actual_distros"
    with_fileglob: "{{ cobbler_iso_dir }}/*"

  - name: umount ISOs out of temporary dirs
    mount: fstype=iso9660 opts="loop,ro" src={{ item }} name={{ cobbler_iso_dir }}/mounted/{{ item | basename }} state=unmounted
    with_fileglob: "{{ cobbler_iso_dir }}/*"

  - name: get list of ISOs temporary dirs
    command: find "{{ cobbler_iso_dir }}/mounted" -maxdepth 1 -mindepth 1 -type d
    register: find_iso_tmpdirs_result
    changed_when: false

  - name: remove ISOs temporary dirs
    file: path="{{ item }}" state=absent
    with_items: "{{ find_iso_tmpdirs_result.stdout_lines }}"

  - name: delete downloaded ISOs
    file: path="{{ item }}" state=absent
    with_fileglob: "{{ cobbler_iso_dir }}/*"

tags:
  - role::dhcpd
  - role::dhcpd::configure
