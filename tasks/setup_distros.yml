---
# Configure distros tasks

- block:
  - name: search distro config files
    find:
      paths: "{{ cobbler_config_dir }}/distros.d"
      file_type: file
    register: cobbler_search_distro_config_files_result

  - name: read distros config
    shell: "cat {{ item }}"
    with_items: >-
      {{ cobbler_search_distro_config_files_result.files
          | map(attribute="path")
          | list }}
    register: cobbler_read_distros_config_result
    changed_when: false

  tags:
    - role::cobbler
    - role::cobbler::configure
    - role::cobbler::distros

- block:
  - name: delete unnecesary distros
    command: "cobbler distro remove --name={{ item }} --recursive"
    when:
      item in cobbler_absent_distros_names
      or ( cobbler_delete_unmanaged
           and item not in cobbler_present_distros_names )
    with_items: "{{ cobbler_saved_isos }}"
    loop_control:
      label: "{{ item }}"

  - name: delete distros with ISOs checksum not matching with inventory
    command: "cobbler distro remove --name={{ item }} --recursive"
    when:
      - item in cobbler_present_distros_names
      - >-
        cobbler_saved_isos[item]['iso_checksum'] not in cobbler_distros
          | selectattr('name', 'equalto', item)
          | map(attribute='iso_checksum')
          | list
    with_items: "{{ cobbler_saved_isos }}"
    loop_control:
      label: "{{ item }}"

  - name: search ISO files
    find:
      paths: "{{ cobbler_iso_dir }}"
      file_type: file
    register: cobbler_search_iso_files_result

  - name: delete ISOs not found in inventory
    file:
      path: "{{ item }}"
      state: absent
    when:
      - cobbler_delete_unmanaged
      - item | basename not in cobbler_present_isos_names
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}
    loop_control:
      label: "{{ item | basename }}"

  - name: find stalled mounted ISOs dirs
    command: >-
      find {{ cobbler_iso_dir }}/mounted -mindepth 1 -maxdepth 1 -type d
    register: cobbler_find_stalled_iso_tmp_dirs_result
    changed_when: false

  - name: umount stalled ISOs out of temporary dirs
    mount:
      name: "{{ item }}"
      src: /dev/null
      fstype: loop
      state: unmounted
    with_items: "{{ cobbler_find_stalled_iso_tmp_dirs_result.stdout_lines }}"
    register: cobbler_umount_stalled_isos

  - block:
    - name: download ISOs
      get_url:
        url: "{{ item.iso_url }}/{{ item.iso_file }}"
        dest: "{{ cobbler_iso_dir }}/{{ item.iso_file }}"
        checksum: "{{ item.iso_checksum_algorithm }}:{{ item.iso_checksum }}"
        force: yes
        timeout: "{{ cobbler_download_timeout }}"
      when: >
        item.state == "present"
        and (item.name not in cobbler_saved_isos or
            item.iso_checksum != cobbler_saved_isos[item.name]['iso_checksum'])
      register: cobbler_download_distros_result
      with_items: "{{ cobbler_distros }}"
      loop_control:
        label: "{{ item.iso_url + '/' + item.iso_file }}"
      notify:
        - update cobbler signatures
    tags:
      - role::cobbler
      - role::cobbler::configure
      - role::cobbler::distros::download

  - name: update cobbler signatures
    command: cobbler signature update
    environment:
      http_proxy: "{{ cobbler_internet_proxy_http }}"
      https_proxy: "{{ cobbler_internet_proxy_https }}"
    register: cobbler_signature_update_result
    failed_when: >-
      '*** TASK COMPLETE ***' not in cobbler_signature_update_result.stdout
    when: >-
      cobbler_download_distros_result | changed
      or cobbler_umount_stalled_isos | changed
    notify:
      - synchronize cobbler
    tags:
      - role::cobbler
      - role::cobbler::configure
      - role::cobbler::distros::download

  - meta: flush_handlers

  - name: search downloaded ISOs files
    find:
      paths: "{{ cobbler_iso_dir }}"
      file_type: file
    register: cobbler_search_iso_files_result

  - name: create temporary mount dirs for ISOs
    file:
      path: "{{ cobbler_iso_mount_dir }}/{{ item | basename }}"
      state: directory
      owner: root
      group: root
      mode: 0755
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}

  - name: mount ISOs in temporary directories
    mount:
      fstype: iso9660
      opts: "loop,ro"
      src: "{{ item }}"
      path: "{{ cobbler_iso_mount_dir }}/{{ item | basename }}"
      state: mounted
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}

  - name: import distros
    command: >-
      cobbler import
      --name={{ cobbler_distros
                  | selectattr('iso_file', 'equalto', item | basename)
                  | map(attribute='name')
                  | list
                  | first }}
      --path={{ cobbler_iso_mount_dir }}/{{ item | basename }}
    when: >
      cobbler_distros
      | selectattr('iso_file', 'equalto', item | basename)
      | map(attribute='name')
      | list
      | first
      not in cobbler_saved_isos
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}

  - name: add ksmeta attributes to distros config
    command: >-
      cobbler distro edit
      --name={{ cobbler_distros
                  | selectattr('iso_file', 'equalto', item | basename)
                  | map(attribute='name')
                  | list
                  | first }}
      --ksmeta='iso_file={{ cobbler_distros
                              | selectattr('iso_file', 'equalto', item
                              | basename)
                              | map(attribute='iso_file')
                              | list
                              | first }}
                iso_checksum={{ cobbler_distros
                                  | selectattr('iso_file', 'equalto', item
                                  | basename)
                                  | map(attribute='iso_checksum')
                                  | list
                                  | first }}'
    when: >-
      cobbler_distros
      | selectattr('iso_file', 'equalto', item | basename)
      | map(attribute='name')
      | list
      | first
      not in cobbler_already_configure_distros_names
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}

  - name: delete default profile created durin distro import
    command: >-
      cobbler profile remove
      --name={{ cobbler_distros
                  | selectattr('iso_file', 'equalto', item | basename)
                  | map(attribute='name')
                  | list
                  | first }}
      --recursive
    when: >
      cobbler_distros
        | selectattr('iso_file', 'equalto', item | basename)
        | map(attribute='name')
        | list
        | first
        not in cobbler_already_configure_distros_names
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}
    loop_control:
      label: "{{ item | basename }}"

  - name: umount ISOs from temporary dirs
    mount:
      fstype: iso9660
      opts: "loop,ro"
      src: "{{ item }}"
      name: "{{ cobbler_iso_mount_dir }}/{{ item | basename }}"
      state: unmounted
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}

  - name: search ISOs temporary dirs
    command: >-
      find "{{ cobbler_iso_dir }}/mounted" -maxdepth 1 -mindepth 1 -type d
    register: cobbler_find_iso_tmpdirs_result
    changed_when: false

  - name: remove ISOs temporary dirs
    file:
      path: "{{ item }}"
      state: absent
    with_items: "{{ cobbler_find_iso_tmpdirs_result.stdout_lines }}"

  - name: delete downloaded ISOs
    file:
      path: "{{ item }}"
      state: absent
    with_items: >-
      {{ cobbler_search_iso_files_result.files
          | map(attribute="path")
          | list }}

  vars:
    cobbler_saved_isos: >-
      {{ lookup('template', 'saved_distros_isos.j2') | from_yaml }}

    cobbler_present_distros_names: >-
        {{ cobbler_distros
            | selectattr('state', 'equalto', 'present')
            | map(attribute='name')
            | list }}

    cobbler_absent_distros_names: >-
        {{ cobbler_distros
            | selectattr('state', 'equalto', 'absent')
            | map(attribute='name')
            | list }}

    cobbler_present_isos_names: >-
        {{ cobbler_distros
            | selectattr('state', 'equalto', 'present')
            | map(attribute='iso_file')
            | list }}

  tags:
    - role::cobbler
    - role::cobbler::configure
    - role::cobbler::distros
